class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> triplets = new ArrayList<>();
        Arrays.sort(nums);
        for (int i = 0, n = nums.length; i < n - 2; i++) {
            int left = i + 1, right = n - 1;
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }
            while (left < right) {
                int sum = nums[i] + nums[left] + nums[right];
                if (sum == 0) {
                    triplets.add(Arrays.asList(nums[i], nums[left], nums[right]));

                    while (left < right && nums[left] == nums[left+1]) {
                        left++;
                    }
                    left++;

                    while (left < right && nums[right] == nums[right-1]) {
                        right--;
                    }
                    right--;
                } else if (sum > 0) {
                    right--;
                } else { left++; }
            }
        }
        return triplets;
    }
}
