/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @return {void} Do not return anything, modify head in-place instead.
 */
var reorderList = function(head) {
    let nodes = [];
    let curr = head;
    while (curr != null) {
        let temp = curr;
        curr = curr.next;
        temp.next = null;
        nodes.push(temp);
    }

    let dummy = new ListNode(0);
    let tail = dummy;
    let dispose = 0;
    while (nodes.length > 0) {
        if (dispose === 0) {
            tail.next = nodes.shift();
            dispose = 1;
        } else if (nodes.length === 1) {
            tail.next = nodes.pop();
            break;
        } else {
            let l = nodes.length;
            tail.next = nodes.pop();
            dispose = 0;
        }
        tail = tail.next;
    }
    head = dummy.next;
    return;
};
