class Solution {
    public int[] twoSum(int[] numbers, int target) {
        HashMap<Integer, List<Integer>> nums = new HashMap<>();
        int[] indexes = new int[2];
        for (int i = 0, n = numbers.length; i < n; i++) {
            if (nums.containsKey(numbers[i])) {
                nums.get(numbers[i]).add(i);
            } else {
                List<Integer> newList = new ArrayList<>();
                newList.add(i);
                nums.put(numbers[i], newList);
            }
        }
        int index = 0;
        while (index < numbers.length) {
            int first = numbers[index];
            int second = target - first;
            for (Map.Entry<Integer, List<Integer>> entry : nums.entrySet()) {
                if (entry.getKey() == second) {
                    for (int value : entry.getValue()) {
                        if (value != index) {
                        indexes[0] = index + 1;
                        indexes[1] = value + 1;
                        return indexes; }
                    }
                }
            }
            index++;
        }
        return indexes;
    }
}
