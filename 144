/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> numbers = new ArrayList<Integer>();
        // Base case
        if (root == null) {
            return numbers;
        }
        Stack<TreeNode> path = new Stack<>();
        numbers.add(root.val);
        if (root.right != null) {
            path.push(root.right);
        }

        if (root.left != null) {
            path.push(root.left);
        }
        
        while (!path.isEmpty()) {
            TreeNode temp = path.pop();
            numbers.add(temp.val);

            if (temp.right != null) {
                path.push(temp.right);
            }

            if (temp.left != null) {
                path.push(temp.left);
            }
        }
        return numbers;
    }
}
