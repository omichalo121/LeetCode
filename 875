class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        if (piles.length == 1) {
            return (int) Math.ceil((double) piles[0] / h);
        }
        Arrays.sort(piles);
        int left = 1;
        int right = piles[piles.length - 1];

        while (left < right) {
            int mid = left + (right - left) / 2;
            if (canEatWithinHours(piles, h, mid)) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }
        return left;
    }

    private boolean canEatWithinHours(int[] piles, int h, int speed) {
        int hours = 0;
        for (int pile : piles) {
            hours += (int) Math.ceil((double) pile / speed);
        }
        return hours <= h;
    }
}
