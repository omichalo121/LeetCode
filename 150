class Solution {
    public int evalRPN(String[] tokens) {
        if (tokens.length == 1) {
            return Integer.parseInt(tokens[0]);
        } else if (tokens.length == 2) {
            return 0;
        }
        Stack<Integer> stack = new Stack<>();
        for (String token : tokens) {
            if (Character.isDigit(token.charAt(0)) || (token.length() > 1 && token.charAt(0) == '-')) {
                stack.push(Integer.parseInt(token));
            } else {
                if (stack.size() < 2) {
                    break;
                }
                int second = stack.pop();
                int first = stack.pop();
                int result = 0;
                switch (token) {
                    case "+":
                        result = first + second;
                        break;
                    case "-":
                        result = first - second;
                        break;
                    case "*":
                        result = first * second;
                        break;
                    case "/":
                        result = (int) ((double) first / second);
                        break;
                }
                stack.push(result);
            }
        }
        if (!stack.isEmpty()) {
            return stack.pop();
        } else {
            return 0;
        }
    }
}
